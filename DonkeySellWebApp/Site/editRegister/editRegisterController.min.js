"use strict";function editRegisterController(n,t,i,r,u,f,e){function o(n,t){this.type=n;this.value=t}n.user={};n.errors=[];n.confirmPassword="";n.isEdit=!1;n.isLoading=!1;n.checking=!1;n.extraCheck=function(){return n.checkAddress(),n.checkEmail(),n.checkPassword(),n.checkUsername(),n.checkPasswordValidation(),e.all([n.checkEmail(),n.checkUsername()])};n.register=function(){n.loading=!0;n.extraCheck().then(()=>{n.errors.length===0?t.createEditUser(n.user).then(function(t){if(t.data&&t.data.userName===n.user.userName){let t=n.isEdit?"Edit successful":"Register successful";i.success(t);r.path("/home");n.$parent.login()}},function(t){i.error("Plase try again!");n.doSomethingWithError(t)}):n.loading=!1})};n.checkAddress=function(){let t=n.user.address;if(t===undefined||t.length<8||t.length>50){n.addError(new o("addressLength","Address should be between 8 and 30 characters!"));return}n.removeErrorIfExists("addressLength")};n.checkUsername=function(){return(n.checking=!0,n.user.userName===undefined||n.user.userName.length<4)?(n.addError(new o("usernameFormat","Username should be between 5 and 15 characters!")),null):(n.removeErrorIfExists("usernameFormat"),u.usernameIsTaken(n.user.userName).then(function(t){let i=t.data;i===!0?n.addError(new o("usernameError","This username is allready taken!")):n.removeErrorIfExists("usernameError")},function(n){console.log(n)}).finally(()=>{n.checking=!1}))};n.checkEmail=function(){if(n.checking=!1,n.checkMailIfValidFormat())n.removeErrorIfExists("emailFormatError");else return n.addError(new o("emailFormatError","This email is not valid!")),null;if(!n.isEdit)return u.emailInUse(n.user.email).then(function(t){let i=t.data;i===!0?n.addError(new o("emailError","This email is allready in use!")):n.removeErrorIfExists("emailError")},function(t){n.doSomethingWithError(t)}).finally(()=>{n.checking=!1})};n.checkMailIfValidFormat=function(){return n.user.email!==undefined&&n.user.email.indexOf("@")>0&&n.user.email.indexOf(".")>0?!0:!1};n.checkPassword=function(){let t=new RegExp(/^([a-zA-Z0-9_-]){8,16}$/),i=t.exec(n.user.password);i===null?n.addError(new o("passwordError","Password should be between 8 and 16 characters, should contain at least one digit, one uppercase letter no symbol characters!")):n.removeErrorIfExists("passwordError")};n.checkPasswordValidation=function(){n.confirmPassword!==n.user.password?n.addError(new o("confirmPasswordError","Password doesn't match the confirm password field!")):n.removeErrorIfExists("confirmPasswordError")};n.cancel=function(){r.path("/home")};n.removeErrorIfExists=function(t){let i=n.errors.filter(function(n){return n.type===t})[0];if(i){let t=n.errors.indexOf(i);n.errors.splice(t,1)}};n.addError=function(t){n.removeErrorIfExists(t.type);n.errors.push(t)};n.init=function(){f.username?(n.isEdit=!0,t.getUser(f.username).then(function(t){t.data&&(n.user=t.data)},function(t){i.error("Plase try again!");n.doSomethingWithError(t)})):n.user=new User};n.setAvatar=function(){if(document.getElementById("pictures").files[0]){let i=document.getElementById("pictures").files[0],t=new FileReader;t.readAsDataURL(i);t.onload=function(){n.$apply(function(){n.user.avatar=t.result})}}};n.doSomethingWithError=function(n){console.log(n)};n.init()}app.controller("editRegisterController",["$scope","usersService","toastr","$location","othersService","$routeParams","$q",editRegisterController]);